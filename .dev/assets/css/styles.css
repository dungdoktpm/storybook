/* 0. Abstracts
======================================================================== */
/* 1. Base
======================================================================== */
body {
  font-family: "Montserrat", sans-serif;
  font-size: 400; }

.pt270 {
  padding-bottom: 27rem; }

*, *:before, *:after {
  box-sizing: border-box; }

html {
  font-size: 62.5%; }

body {
  margin: 0;
  padding: 0; }

p {
  margin: 0; }

img {
  max-width: 100%;
  height: auto;
  border: 0;
  vertical-align: middle; }

ul, li {
  margin: 0;
  padding: 0; }

li {
  list-style: none; }

a {
  text-decoration: none; }

h3, h4 {
  margin: 0; }

/* 2. Components
======================================================================== */
.banner {
  font-family: "Montserrat", sans-serif;
  width: 100%;
  height: 320px;
  background-image: url("https://images.pexels.com/photos/4982171/pexels-photo-4982171.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover; }
  .banner__title {
    font-size: 36px;
    font-weight: bold;
    color: white;
    padding-top: 180px;
    padding-left: 80px;
    letter-spacing: 3px; }

.breadcrumb {
  padding-left: 80px;
  background-color: rgba(255, 255, 255, 0);
  display: inline-block; }
  .breadcrumb-item {
    font-size: 16px;
    font-family: "Quicksand", sans-serif;
    font-weight: 400;
    color: #a5a5a5;
    display: inline-block;
    letter-spacing: 2px; }
  .breadcrumb a {
    color: #a5a5a5; }
  .breadcrumb .active {
    color: #68c3c0; }

.box {
  padding: 10px;
  margin-bottom: 85px; }

.box-time {
  width: 80px;
  border: 3px solid #cecece;
  text-align: center;
  box-sizing: border-box;
  padding: 15px 10px; }
  .box-time__day {
    font-size: 44px;
    font-weight: bold;
    font-family: "Montserrat", sans-serif; }
  .box-time__month {
    font-size: 16px;
    font-weight: bold;
    font-family: "Montserrat", sans-serif; }

.box-img {
  max-width: 523px;
  height: 293px;
  background-image: url("https://images.pexels.com/photos/3553903/pexels-photo-3553903.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  text-transform: uppercase;
  font-weight: bold;
  text-align: center;
  position: relative; }
  .box-img__content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 120%); }
  .box-img__top {
    font-size: 12px;
    color: #68c3c0;
    padding-bottom: 10px; }
  .box-img__bottom {
    font-size: 18px;
    letter-spacing: 2px;
    color: #FFFFFF; }
  .box-img .icon {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%); }

.search input {
  padding: 10px; }

.search::after {
  content: "";
  position: absolute;
  display: inline-block;
  width: 10px; }

.header {
  position: relative;
  display: flex;
  justify-content: space-between; }
  .header__menu-item {
    display: inline-block; }
  .header__menu-link {
    display: block;
    padding: 10px 20px; }

.icon {
  width: 60px;
  height: 60px;
  background-color: #68c3c0;
  border-radius: 50%;
  position: relative; }
  .icon:after {
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;
    transform: translate(-25%, -50%);
    width: 0;
    height: 0;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-left: 15px solid white;
    z-index: 2; }
  .icon:before {
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;
    transform: translate(-25%, -50%);
    width: 0;
    height: 0;
    border-top: 13px solid transparent;
    border-bottom: 13px solid transparent;
    border-left: 12px solid #68c3c0;
    z-index: 3; }

.logo {
  font-size: 72px;
  font-weight: bold; }
  .logo__text-first {
    color: #68c3c0; }
  .logo__text-last {
    color: black; }

.menu__list {
  display: inline-block; }

.menu__item {
  display: inline-block; }

.menu__link {
  display: block;
  padding: 10px;
  font-size: 14px;
  color: black; }

.pagination {
  font-size: 13px;
  margin-left: 50%;
  display: inline-block; }

.page-item {
  position: relative;
  display: inline-block;
  padding-top: 10px; }

.page-link {
  color: black;
  padding: 10px 15px;
  border: none; }

.next {
  width: 0;
  height: 0;
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
  border-left: 8px solid black;
  padding: 0px;
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%); }

.previous {
  width: 0;
  height: 0;
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
  border-right: 8px solid black;
  padding: 0px;
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%); }

.active {
  color: #68c3c0; }

.section {
  position: relative;
  max-width: 1300px;
  margin: 0 auto; }

.btn {
  border: 0;
  background-color: #616ae8;
  padding: 2rem;
  font-size: 1.4rem;
  cursor: pointer; }

.row {
  margin-left: 0;
  margin-right: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
